version: 2
jobs:
  test:
    docker:
      - image: "circleci/python:3.6"
    working_directory: "~/repo"
    steps:
      - "checkout"

      - run: "sudo chown -R circleci:circleci /usr/local/bin"
      - run: "sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages"
      - restore_cache:
          key: 'deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'

      - run:
          name: "Installing dependencies"
          command: |
            sudo pip install pip pipenv --upgrade
            pipenv install --dev

      - save_cache:
          key: 'deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

      - run:
          name: "Running tests"
          command: |
            pipenv run lint


  linkcheck:
    docker:
      - image: "circleci/python:3.6"
    working_directory: "~/repo"
    steps:
      - "checkout"

      - run: "sudo chown -R circleci:circleci /usr/local/bin"
      - run: "sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages"
      - restore_cache:
          key: 'deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'

      - run:
          name: "Installing dependencies"
          command: |
            sudo pip install pip pipenv --upgrade
            pipenv install --dev

      - save_cache:
          key: 'deps-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

      - run:
          name: "Checking external links"
          command: |
            pipenv run linkcheck


  deploy-server:
    docker:
      - image: "circleci/node:10"
    working_directory: "~/repo"
    steps:
      - "checkout"

      - run:
          name: "Installing now.sh"
          command: sudo npm install --global --unsafe-perm now

      - run:
          name: "Deploying"
          command: |
            export NOW_TARGET="staging"
            [[ "$CIRCLE_BRANCH" == "master" ]] && export NOW_TARGET="production"
            now ./code --name=cojeapi --target="$NOW_TARGET" --token="$NOW_TOKEN"


workflows:
  version: 2
  build:
    jobs:
      - linkcheck
      - test
      - deploy-server:
          requires:
            - test
